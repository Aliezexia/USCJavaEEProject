<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.cerambycidae.mapper.StudentJSFInfoMapper">
  <resultMap id="BaseResultMap" type="cn.org.cerambycidae.pojo.StudentJSFInfo">
    <id column="stu_Num" jdbcType="INTEGER" property="stuNum" />
    <result column="stu_Name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_TeamNum" jdbcType="INTEGER" property="stuTeamnum" />
    <result column="stu_Age" jdbcType="INTEGER" property="stuAge" />
    <result column="stu_Major" jdbcType="VARCHAR" property="stuMajor" />
    <result column="stu_Gender" jdbcType="VARCHAR" property="stuGender" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_Num, stu_Name, stu_TeamNum, stu_Age, stu_Major, stu_Gender
  </sql>
  <select id="selectByExample" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where stu_Num = #{stuNum,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where stu_Num = #{stuNum,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfoExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfo">
    insert into students (stu_Num, stu_Name, stu_TeamNum, 
      stu_Age, stu_Major, stu_Gender
      )
    values (#{stuNum,jdbcType=INTEGER}, #{stuName,jdbcType=VARCHAR}, #{stuTeamnum,jdbcType=INTEGER}, 
      #{stuAge,jdbcType=INTEGER}, #{stuMajor,jdbcType=VARCHAR}, #{stuGender,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfo">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuNum != null">
        stu_Num,
      </if>
      <if test="stuName != null">
        stu_Name,
      </if>
      <if test="stuTeamnum != null">
        stu_TeamNum,
      </if>
      <if test="stuAge != null">
        stu_Age,
      </if>
      <if test="stuMajor != null">
        stu_Major,
      </if>
      <if test="stuGender != null">
        stu_Gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuNum != null">
        #{stuNum,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuTeamnum != null">
        #{stuTeamnum,jdbcType=INTEGER},
      </if>
      <if test="stuAge != null">
        #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuMajor != null">
        #{stuMajor,jdbcType=VARCHAR},
      </if>
      <if test="stuGender != null">
        #{stuGender,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfoExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.stuNum != null">
        stu_Num = #{record.stuNum,jdbcType=INTEGER},
      </if>
      <if test="record.stuName != null">
        stu_Name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuTeamnum != null">
        stu_TeamNum = #{record.stuTeamnum,jdbcType=INTEGER},
      </if>
      <if test="record.stuAge != null">
        stu_Age = #{record.stuAge,jdbcType=INTEGER},
      </if>
      <if test="record.stuMajor != null">
        stu_Major = #{record.stuMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.stuGender != null">
        stu_Gender = #{record.stuGender,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set stu_Num = #{record.stuNum,jdbcType=INTEGER},
      stu_Name = #{record.stuName,jdbcType=VARCHAR},
      stu_TeamNum = #{record.stuTeamnum,jdbcType=INTEGER},
      stu_Age = #{record.stuAge,jdbcType=INTEGER},
      stu_Major = #{record.stuMajor,jdbcType=VARCHAR},
      stu_Gender = #{record.stuGender,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfo">
    update students
    <set>
      <if test="stuName != null">
        stu_Name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuTeamnum != null">
        stu_TeamNum = #{stuTeamnum,jdbcType=INTEGER},
      </if>
      <if test="stuAge != null">
        stu_Age = #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuMajor != null">
        stu_Major = #{stuMajor,jdbcType=VARCHAR},
      </if>
      <if test="stuGender != null">
        stu_Gender = #{stuGender,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_Num = #{stuNum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.org.cerambycidae.pojo.StudentJSFInfo">
    update students
    set stu_Name = #{stuName,jdbcType=VARCHAR},
      stu_TeamNum = #{stuTeamnum,jdbcType=INTEGER},
      stu_Age = #{stuAge,jdbcType=INTEGER},
      stu_Major = #{stuMajor,jdbcType=VARCHAR},
      stu_Gender = #{stuGender,jdbcType=VARCHAR}
    where stu_Num = #{stuNum,jdbcType=INTEGER}
  </update>
</mapper>